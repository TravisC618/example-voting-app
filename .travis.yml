sudo: required

### encrypted docker username & pwd
env:
  global:
    - secure: "Ed8gOcJo0GOkAduPb+03r6EBqr/pIT6OAc2P6lixTl2Bm54h2mYgUYO6ZJSb+1o9PCdMh3TJS/GIzyt4K6wiOu20WVODMYqjm98hulHcFiTE3yfji02+0cPmWR9+oJ1o1rSnQzN/2ysvKjaeLHbKp7MAaOaGIoCnwj2Bmb/5xh11/7Y4nYw3E3McwRjCunuDmUKOUULkLeAXKBh+8P14gt+YFS1G7psDbmJoYE+cF5E6tw/g3go/1XZDVbtio9UK5W+froFv0ZllyZUJLbdaxZcFOXI6Q4qI112XifmOH26350rV3pc4pqSwyFzVPRCAWU0ywnQ3uWoY3nTWZQ7BpNNRufYNsgRHcfS1PaE2dmrj0yvUv+wbs/Ai/KX/NJnnPrMWAM60/jhHo5DRuJI5m/8r5hdihW4f2beDDItGR97a3xvB1KgakL+TDZtaZ5Lo+uOW6PkgkRWZL3DvI+pZyOCEPeKjHi2atosi87J3deIDWpeqxSx7Gf1Wp6vUp+WHOfUT9zWYyWITyFgqrW+rdrAhwNNMp0G5zGgtFWY3T04k8EreFvQ5o2S2ofyznpNbN3d2s0opDvcWQMliNmdoi91YjG/JNAih/2Ttw/tbg8iysd81d9CTjevC5BcIP5Us8U44j189nEpGoWKQJB/M1sUlWpht0KynPimXblHa4ks="
    - secure: "ErtSmvJ1Id9gJB17Ujqsvuz2eUhh52sNuHHfXnhDsgSph9QdufnI0/FxhtqeORQUA4RkMtnMqkUI7A70DxNTXETbVHMzboE/5TLqf8+Qr5pzFu7FrN6Awqsu6EfzjEc1GLMUPTwRe1x4/WMbiuBKmRBsrpZ+9MTeWdUaHEUKjq1VIUOUJXx0fNp+l/z4y/Fv6DcbEBTIE5HEM3f/5OwFq1nIHq0MOH62Omw5O2qHunlWR3a8ppJ0wX+pWHF6kjClf6rV3xzRp0bXFnYvY1y9tEHijD1pGWQrpfA5ILaPCKTVxAoS8kiKo6YKrqJCzb9mWVJcoI5+IQ2oRnRsW1blrxz1DEqfdXwbzFHo0Q8NiyHfvpKY5jElbn90h1i1aSjM6mT/5ueKmTWdee7kl7d0jF4Q4dy+nftsvyAHzwyWKaKzZtSE+iY4wkE2QQWvujBJ88pDMve4ShBQzH9nUkYinO6KfYVVN//mP1pl8luKfA+mufc6xOps7Cj+wF7h1E3DM+eb8kFGNV1tXjRgBuCBxrb0b74d3fxC+W2NkEQjp4uEtunE5USiYKl0mYnUmTB3Xe6KvSyEBZXajxsHvwE2MqjY6ZTnfDux6If9mQkEm2tIVC2GQ9UHH3iJ2eyEp6mRotmO6ttDcEo0Tq8386d2dA/aCNrpUU6qxzq5641RXfg="
    - DOCKER_COMPOSE_VERSION=1.29.2

services:
  - docker

### update docker compose version
before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

jobs:
  include:
    - stage: integration tests
      script: 
        - "echo '================ Integration Test started ================'"
        - docker-compose -f result/docker-compose.test.yml run sut

### if tests are all passed, push image before deploying
### require the branch name to be master
after_success:
  - test $TRAVIS_BRANCH = "master" && 
    docker login -u $DOCKER_USERNAME -p $DOCKER_PWD &&
    docker-compose build --pull &&
    docker-compose push &&
    docker logout
  
deploy:
  provider: elasticbeanstalk
  region: "us-east-1"
  app: "voting-app"
  env: "Votingapp-env"
  bucket: "elasticbeanstalk-us-east-1-615572604844"
  bucket_path: "VotingApp"
  on:
      repo: TravisC618/example-voting-app
      branch: master
  access_key_id: "$AWS_ACCESS_KEY"
  secret_access_key: "$AWS_SECRET_KEY"

